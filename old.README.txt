ONCE all 3 machines are ready with using 'vagrant up" command, you can use below comand to do rest of  the kubernetes implementation by following script:

./execute.sh

NOTE: ensure sshpass, ansible, ansible core etc packages are installed in your local machine (sudo apt install sshpass) and all shell scripts within ubuntu folder are with executable permissions. Good luck, buddy!

#You can skip below instructions if you have executed ./execute.sh successfully

RUN on controlnode:
01#>~/.ssh/known_hosts
02#ssh-copy-id vagrant@10.0.3.6
03#ssh-copy-id vagrant@10.0.3.7
04#ssh-copy-id vagrant@10.0.3.8

OR execute ./prepare_local.sh

05#ansible-playbook -i hosts -u vagrant reboot.yml

06 #ansible -i hosts control  -u vagrant  -a "sudo kubeadm init --apiserver-advertise-address=10.0.3.6 --pod-network-cidr=10.244.0.0/16" |tee init.txt ; echo sudo $(tail -2 init.txt|head -1| cut -d'\' -f1)  $(tail -1 init.txt| cut -d'[' -f1) |tee compute_add.sh

OR

execute  #./init_control.sh

07 #ansible-playbook -i hosts -u vagrant kubernetes.yaml
08 #ansible-playbook -i hosts -u vagrant join-compute.yaml

09 #ansible-playbook -i hosts -u vagrant helm.yml
Run on control node  #sudo  kubectl apply -f https://github.com/coreos/flannel/raw/master/Documentation/kube-flannel.yml 
#https://docs.projectcalico.org/v3.14/manifests/calico.yaml
#kubectl apply -f https://docs.projectcalico.org/v3.14/manifests/calico.yaml
